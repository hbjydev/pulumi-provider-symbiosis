{
    "name": "symbiosis",
    "displayName": "Symbiosis",
    "description": "A Pulumi package for creating and managing symbiosis cloud resources.",
    "keywords": [
        "pulumi",
        "symbiosis",
        "category/cloud"
    ],
    "homepage": "https://symbiosis.host",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`terraform-provider-symbiosis` Terraform Provider](https://github.com/symbiosis-cloud/terraform-provider-terraform-provider-symbiosis).",
    "repository": "https://github.com/hbjydev/pulumi-symbiosis",
    "publisher": "H4n.io",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "rootNamespace": "HaydenYoung"
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/hbjydev/pulumi-symbiosis/sdk/go/symbiosis"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing symbiosis cloud resources.",
            "packageName": "@h4n-io/pulumi-symbiosis",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/symbiosis-cloud/terraform-provider-terraform-provider-symbiosis)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-symbiosis` repo](https://github.com/hbjydev/pulumi-symbiosis/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-terraform-provider-symbiosis` repo](https://github.com/symbiosis-cloud/terraform-provider-terraform-provider-symbiosis/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "packageName": "pulumi_symbiosis",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/symbiosis-cloud/terraform-provider-terraform-provider-symbiosis)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-symbiosis` repo](https://github.com/hbjydev/pulumi-symbiosis/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-terraform-provider-symbiosis` repo](https://github.com/symbiosis-cloud/terraform-provider-terraform-provider-symbiosis/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "description": "The ApiKey used to authenticate requests towards Symbiosis.\n"
            },
            "endpoint": {
                "type": "string",
                "description": "Endpoint for reaching the symbiosis API. Used for debugging or when accessed through a proxy.\n"
            }
        },
        "defaults": [
            "apiKey"
        ]
    },
    "types": {
        "symbiosis:index/NodePoolTaint:NodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "effect",
                "key",
                "value"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the terraform-provider-symbiosis package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiKey": {
                "type": "string",
                "description": "The ApiKey used to authenticate requests towards Symbiosis.\n"
            },
            "endpoint": {
                "type": "string",
                "description": "Endpoint for reaching the symbiosis API. Used for debugging or when accessed through a proxy.\n"
            }
        },
        "required": [
            "apiKey"
        ],
        "inputProperties": {
            "apiKey": {
                "type": "string",
                "description": "The ApiKey used to authenticate requests towards Symbiosis.\n"
            },
            "endpoint": {
                "type": "string",
                "description": "Endpoint for reaching the symbiosis API. Used for debugging or when accessed through a proxy.\n"
            }
        },
        "requiredInputs": [
            "apiKey"
        ]
    },
    "resources": {
        "symbiosis:index/cluster:Cluster": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "certificate": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Cluster API server endpoint\n"
                },
                "isHighlyAvailable": {
                    "type": "boolean",
                    "description": "When set to true it will deploy a highly available control plane with multiple replicas for redundancy.\n"
                },
                "kubeVersion": {
                    "type": "string",
                    "description": "Kubernetes version, see symbiosis.host for valid values or \"latest\" for the most recent supported version.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Cluster name. Changing the name forces re-creation.\n"
                },
                "privateKey": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "caCertificate",
                "certificate",
                "endpoint",
                "name",
                "privateKey",
                "region"
            ],
            "inputProperties": {
                "isHighlyAvailable": {
                    "type": "boolean",
                    "description": "When set to true it will deploy a highly available control plane with multiple replicas for redundancy.\n",
                    "willReplaceOnChanges": true
                },
                "kubeVersion": {
                    "type": "string",
                    "description": "Kubernetes version, see symbiosis.host for valid values or \"latest\" for the most recent supported version.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Cluster name. Changing the name forces re-creation.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cluster resources.\n",
                "properties": {
                    "caCertificate": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "Cluster API server endpoint\n"
                    },
                    "isHighlyAvailable": {
                        "type": "boolean",
                        "description": "When set to true it will deploy a highly available control plane with multiple replicas for redundancy.\n",
                        "willReplaceOnChanges": true
                    },
                    "kubeVersion": {
                        "type": "string",
                        "description": "Kubernetes version, see symbiosis.host for valid values or \"latest\" for the most recent supported version.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Cluster name. Changing the name forces re-creation.\n",
                        "willReplaceOnChanges": true
                    },
                    "privateKey": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "symbiosis:index/clusterServiceAccount:ClusterServiceAccount": {
            "properties": {
                "clusterCaCertificate": {
                    "type": "string",
                    "description": "Cluster CA certificate\n"
                },
                "clusterName": {
                    "type": "string",
                    "description": "Cluster name. Changing the name forces re-creation.\n"
                },
                "token": {
                    "type": "string",
                    "description": "Service account token\n"
                }
            },
            "required": [
                "clusterCaCertificate",
                "clusterName",
                "token"
            ],
            "inputProperties": {
                "clusterName": {
                    "type": "string",
                    "description": "Cluster name. Changing the name forces re-creation.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClusterServiceAccount resources.\n",
                "properties": {
                    "clusterCaCertificate": {
                        "type": "string",
                        "description": "Cluster CA certificate\n"
                    },
                    "clusterName": {
                        "type": "string",
                        "description": "Cluster name. Changing the name forces re-creation.\n",
                        "willReplaceOnChanges": true
                    },
                    "token": {
                        "type": "string",
                        "description": "Service account token\n"
                    }
                },
                "type": "object"
            }
        },
        "symbiosis:index/nodePool:NodePool": {
            "properties": {
                "cluster": {
                    "type": "string",
                    "description": "Name of cluster to create node pool in.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Node labels to be applied to the nodes\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of node pool\n"
                },
                "nodeType": {
                    "type": "string",
                    "description": "Type of nodes for this specific pool, see docs.\n"
                },
                "quantity": {
                    "type": "integer",
                    "description": "Desired number of nodes for specific pool.\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/symbiosis:index/NodePoolTaint:NodePoolTaint"
                    },
                    "description": "Node taints to be applied to the nodes\n"
                }
            },
            "required": [
                "cluster",
                "name",
                "nodeType",
                "quantity"
            ],
            "inputProperties": {
                "cluster": {
                    "type": "string",
                    "description": "Name of cluster to create node pool in.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Node labels to be applied to the nodes\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of node pool\n",
                    "willReplaceOnChanges": true
                },
                "nodeType": {
                    "type": "string",
                    "description": "Type of nodes for this specific pool, see docs.\n",
                    "willReplaceOnChanges": true
                },
                "quantity": {
                    "type": "integer",
                    "description": "Desired number of nodes for specific pool.\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/symbiosis:index/NodePoolTaint:NodePoolTaint"
                    },
                    "description": "Node taints to be applied to the nodes\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cluster",
                "nodeType",
                "quantity"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NodePool resources.\n",
                "properties": {
                    "cluster": {
                        "type": "string",
                        "description": "Name of cluster to create node pool in.\n",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Node labels to be applied to the nodes\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of node pool\n",
                        "willReplaceOnChanges": true
                    },
                    "nodeType": {
                        "type": "string",
                        "description": "Type of nodes for this specific pool, see docs.\n",
                        "willReplaceOnChanges": true
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Desired number of nodes for specific pool.\n"
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/symbiosis:index/NodePoolTaint:NodePoolTaint"
                        },
                        "description": "Node taints to be applied to the nodes\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "symbiosis:index/teamMember:TeamMember": {
            "properties": {
                "acceptedInvitation": {
                    "type": "string",
                    "description": "Whether the user has accepted the invitation to the team.\n"
                },
                "email": {
                    "type": "string",
                    "description": "User email to invite. Adding an team member will send the user an invitation. Deleting a team member will either delete\nthe invitation or the user depending on whether the user has accepted the invitation.\n"
                },
                "role": {
                    "type": "string",
                    "description": "User role. Valid values include [MEMBER, ADMIN].\n"
                }
            },
            "required": [
                "acceptedInvitation",
                "email",
                "role"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "User email to invite. Adding an team member will send the user an invitation. Deleting a team member will either delete\nthe invitation or the user depending on whether the user has accepted the invitation.\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "User role. Valid values include [MEMBER, ADMIN].\n"
                }
            },
            "requiredInputs": [
                "email",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TeamMember resources.\n",
                "properties": {
                    "acceptedInvitation": {
                        "type": "string",
                        "description": "Whether the user has accepted the invitation to the team.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "User email to invite. Adding an team member will send the user an invitation. Deleting a team member will either delete\nthe invitation or the user depending on whether the user has accepted the invitation.\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "User role. Valid values include [MEMBER, ADMIN].\n"
                    }
                },
                "type": "object"
            }
        }
    }
}